name: CI

on:
  push:
  pull_request:
  repository_dispatch:
    types: [run_build]

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    if: ${{ (github.ref_type == 'tag') && (github.repository_owner == 'pspdev') }}

    steps:
    - uses: actions/checkout@v4
    - name: Generate Changelog
      run: |
        echo "We are pleased to announce the ${{ github.ref_name }} release of the PSPDEV toolchain, made for homebrew development for the Playstation Portable." > changelog.md
        echo "" >> changelog.md
        echo "For information on how to install and use the PSPDEV toolchain, take a look [here](https://pspdev.github.io/)." >> changelog.md
        echo "" >> changelog.md
        ./build-changelog.sh >> changelog.md
    - name: Create Release
      if: ${{ github.ref_type == 'tag' }}
      uses: softprops/action-gh-release@v2
      with:
        body_path: changelog.md
        make_latest: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ${{ matrix.os[0] }}
    strategy:
      matrix:
        os: [
          [macos-latest, arm64, bash],
          [macos-13, x86_64, bash],
          [ubuntu-latest, x86_64, bash],
          [ubuntu-latest, arm64, bash]
        ]
      fail-fast: false
    defaults:
     run:
      shell: ${{ matrix.os[2] }} {0}

    steps:
    - uses: actions/checkout@v4
    
    - name : Install dependencies on required OS
      run: | 
        ./prepare.sh

    - name: Runs full build in shell
      run: |
        export PATH="$(brew --prefix gnu-sed)/libexec/gnubin:$PATH" # This really is only needed for macOS
        export PATH="$(brew --prefix libtool)/libexec/gnubin:$PATH" # This really is only needed for macOS
        export PKG_CONFIG_PATH="$(brew --prefix libarchive)/lib/pkgconfig:$(brew --prefix openssl)/lib/pkgconfig" #This really is only needed for macOS
        export PSPDEV=$PWD/pspdev
        export PATH=$PATH:$PSPDEV/bin
        ./build-all.sh

    - name: Prepare pspdev folder
      run: |
        tar -zcvf pspdev-${{matrix.os[0]}}-${{matrix.os[1]}}.tar.gz pspdev

    - uses: actions/upload-artifact@v4
      with:
        name: pspdev-${{matrix.os[0]}}-${{matrix.os[1]}}
        path: pspdev-${{matrix.os[0]}}-${{matrix.os[1]}}.tar.gz

    - name: Create pre-release
      if: ${{ github.ref == 'refs/heads/master' }}
      uses: softprops/action-gh-release@v2
      with:
        files: pspdev-${{matrix.os[0]}}-${{matrix.os[1]}}.tar.gz
        prerelease: true
        name: "Development build"
        tag_name: "latest"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Release
      if: ${{ github.ref_type == 'tag' }}
      uses: softprops/action-gh-release@v2
      with:
        files: pspdev-${{matrix.os[0]}}-${{matrix.os[1]}}.tar.gz
        tag_name: ${{ github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-Dockers:
    runs-on: ubuntu-latest
    container: ${{ matrix.container[0] }}:${{ matrix.container[1] }}
    strategy:
      matrix:
        container: [[fedora, latest]]
      fail-fast: false

    steps:
    - name: Install git on Fedora
      if: ${{ matrix.container[0] == 'fedora' }}
      run: |
        dnf -y install git

    - uses: actions/checkout@v4

    - name: Install dependencies Fedora
      if: ${{ matrix.container[0] == 'fedora' }}
      run: |
        ./prepare.sh

    - name: Runs full build in shell
      run: |
        chown -R $(id -nu):$(id -ng) .
        export PSPDEV=$PWD/pspdev
        export PATH=$PATH:$PSPDEV/bin
        ./build-all.sh

    - name: Prepare pspdev folder
      run: |
        tar -zcvf pspdev-${{matrix.container[0]}}-${{matrix.container[1]}}.tar.gz pspdev

    - uses: actions/upload-artifact@v4
      with:
        name: pspdev-${{matrix.container[0]}}-${{matrix.container[1]}}
        path: pspdev-${{matrix.container[0]}}-${{matrix.container[1]}}.tar.gz

    - name: Create pre-release
      if: ${{ github.ref == 'refs/heads/master' }}
      uses: softprops/action-gh-release@v2
      with:
        files: pspdev-${{matrix.container[0]}}-${{matrix.container[1]}}.tar.gz
        prerelease: true
        name: "Development build"
        tag_name: "latest"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Release
      if: ${{ github.ref_type == 'tag' }}
      uses: softprops/action-gh-release@v2
      with:
        files: pspdev-${{matrix.container[0]}}-${{matrix.container[1]}}.tar.gz
        tag_name: ${{ github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
